{"version":3,"sources":["webpack:///./src/components/projects/projects.styles.tsx","webpack:///./src/components/projects/project/index.tsx","webpack:///./src/components/projects/projects.view.tsx","webpack:///./src/components/projects/index.tsx","webpack:///./src/pages/projects.tsx"],"names":["Container","styled","section","theme","colors","darkblue","blue","grey","ProjectContainer","div","breakpoints","article","white","css","lightblue","Thumb","img","DateComponent","Content","HoveredContainer","transparentDarkblue","MobileButtonsContainer","Button","button","live","Project","p","useState","isHover","setHover","device","useSelector","s","screen","date","Date","created_at","formatedDate","moment","format","onMouseEnter","onMouseLeave","to","git","src","mainPictrue","publicURL","alt","Title","content","View","projects","map","project","node","Projects","sort","a","b","subpage","Helmet","name","data","allStrapiProjects","edges"],"mappings":"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","file":"component---src-pages-projects-tsx-97f8415504b4c076fbcf.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  min-height: 80vh;\n  width: 100vw;\n  h1 {\n    color: ${({ theme }) => theme.colors.darkblue};\n    width: 100%;\n    text-align: center;\n    padding-top: 30px;\n    span {\n      color: ${({ theme }) => theme.colors.blue};\n    }\n  }\n  p {\n    color: ${({ theme }) => theme.colors.grey};\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nexport const ProjectContainer = styled.div`\n  display: grid;\n  grid-template-columns: 33.333% 33.333% 33.333%;\n  width: 100%;\n  padding: 60px 10%;\n  grid-row-gap: 50px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints[1]}px) {\n    grid-template-columns: 100%;\n    padding: 60px 5%;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled, { css } from \"styled-components\";\nimport { FaCalendar, FaHeartbeat, FaGithub } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { State } from \"../../../../store/reducers\";\n\nconst Container = styled.article`\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  margin: 0 30px;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  transition: 0.4s;\n  @media (max-width: ${({ theme }) => theme.breakpoints[1]}px) {\n    margin: 0;\n  }\n\n  div {\n    background: ${({ theme }) => theme.colors.white};\n    padding: 10px;\n    height: 100%;\n    h2 {\n      color: ${({ theme }) => theme.colors.darkblue};\n    }\n  }\n\n  :hover {\n    border: 1px solid transparent;\n    ${({ theme }) => css`\n      box-shadow: inset 0 0 60px transparent,\n        inset 10px 10px 50px ${theme.colors.white},\n        inset -10px 0 80px ${theme.colors.blue},\n        inset 10px 0 100px ${theme.colors.lightblue},\n        inset -10px 0 100px ${theme.colors.blue}, 0 0 50px #fff,\n        -10px 0 50px ${theme.colors.lightblue}, 10px 0 80px ${theme.colors.blue};\n    `};\n    @media (max-width: ${({ theme }) => theme.breakpoints[1]}px) {\n      border: 1px solid ${({ theme }) => theme.colors.blue};\n      box-shadow: none;\n    }\n  }\n`;\n\nconst Thumb = styled.img`\n  width: 100%;\n`;\n\nconst DateComponent = styled.div`\n  color: ${({ theme }) => theme.colors.white};\n  background: none !important;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n\n  svg {\n    margin-right: 5px;\n    position: relative;\n    top: 1px;\n  }\n`;\n\nconst Content = styled.article`\n  color: ${({ theme }) => theme.colors.blue};\n  text-align: justify;\n  padding: 15px 0;\n`;\n\nconst HoveredContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backdrop-filter: blur(8px);\n  background: ${({ theme }) => theme.colors.transparentDarkblue} !important;\n  z-index: 2;\n  opacity: 0;\n  transition: 0.4s;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst MobileButtonsContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  button {\n    margin: 0;\n    :not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nconst Button = styled.button<{ live?: boolean }>`\n  padding: 10px;\n  background: ${({ theme, live }) =>\n    live ? theme.colors.blue : theme.colors.grey};\n\n  border-radius: 8px;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin: 20px;\n  svg {\n    margin-right: 5px;\n  }\n  a {\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\ninterface ProjectInterface {\n  Title: string;\n  content: string;\n  created_at: string;\n  date: string | Date;\n  id: string;\n  live: string;\n  git: string;\n  mainPictrue: {\n    publicURL: string;\n  };\n}\n\nconst Project: React.FC<ProjectInterface> = (p) => {\n  const [isHover, setHover] = useState<boolean>(false);\n  const device = useSelector((s: State) => s.screen.device);\n\n  const date = new Date(p.created_at);\n  const formatedDate = moment(date).format(\"ll\");\n\n  return (\n    <Container\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {isHover && device === \"desktop\" && (\n        <HoveredContainer>\n          <Button live>\n            <Link to={p.live}>\n              <FaHeartbeat />\n              live version\n            </Link>\n          </Button>\n          <Button>\n            <Link to={p.git}>\n              <FaGithub />\n              github\n            </Link>\n          </Button>\n        </HoveredContainer>\n      )}\n      <Thumb src={p.mainPictrue.publicURL} alt={`image-${p.Title}`} />\n      <div>\n        <h2>{p.Title}</h2>\n        <DateComponent>\n          <FaCalendar />\n          {formatedDate}\n        </DateComponent>\n        <Content>{p.content}</Content>\n        {device === \"mobile\" && (\n          <MobileButtonsContainer>\n            <Button live>\n              <Link to={p.live}>\n                <FaHeartbeat />\n                live version\n              </Link>\n            </Button>\n            <Button>\n              <Link to={p.git}>\n                <FaGithub />\n                github\n              </Link>\n            </Button>\n          </MobileButtonsContainer>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\n\nimport { Container, ProjectContainer } from \"./projects.styles\";\nimport Project from \"./project\";\n\ninterface ViewInterface {\n  projects: {\n    node: {\n      Title: string;\n      content: string;\n      created_at: string;\n      date: string | Date;\n      id: string;\n      live: string;\n      git: string;\n      mainPictrue: {\n        publicURL: string;\n      };\n    };\n  }[];\n}\n\nconst View: React.FC<ViewInterface> = (p) => {\n  return (\n    <Container>\n      <h1>\n        My Recent <span>Works</span>\n      </h1>\n      <p>this is a place where you can find my recent projects</p>\n      <ProjectContainer>\n        {p.projects.map((project) => (\n          <Project {...project.node} />\n        ))}\n      </ProjectContainer>\n    </Container>\n  );\n};\n\nexport default View;\n","import React from \"react\";\n\nimport View from \"./projects.view\";\n\ninterface ProjectsInterface {\n  projects: {\n    node: {\n      Title: string;\n      content: string;\n      created_at: string;\n      date: string | Date;\n      live: string;\n      git: string;\n      id: string;\n      mainPictrue: {\n        publicURL: string;\n      };\n    };\n  }[];\n}\n\nconst Projects: React.FC<ProjectsInterface> = (p) => {\n  const projects = [...p.projects].sort((a, b) =>\n    new Date(a.node.date) > new Date(b.node.date) ? -1 : 1\n  );\n\n  return View({ projects });\n};\n\nexport default Projects;\n","import React, { FC } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/layout\";\nimport ProjectsComponent from \"../components/projects\";\n\nexport const query = graphql`\n  query MyQuery {\n    allStrapiProjects {\n      edges {\n        node {\n          id\n          Title\n          content\n          created_at\n          date\n          live\n          git\n          mainPictrue {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface ProjectInterface {\n  data: {\n    allStrapiProjects: {\n      edges: {\n        node: {\n          Title: string;\n          content: string;\n          created_at: string;\n          date: string;\n          id: string;\n          mainPictrue: {\n            publicURL: string;\n          };\n        };\n      }[];\n    };\n  };\n}\n\nconst Projects: FC<ProjectInterface> = (p) => {\n  return (\n    <Layout subpage>\n      <Helmet>\n        <title>Projects - Kamil Pieczyk Portfolio</title>\n        <meta name=\"description\" content=\"All of my developed projects.\" />\n      </Helmet>\n      <ProjectsComponent projects={p.data.allStrapiProjects.edges} />\n    </Layout>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}